server:
  port: 48080

--- #################### ??????? ####################

spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://127.0.0.1:3306/ruoyi?useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true # MySQL Connector/J 8.X ?????
    username: root
    password: Alix123456

  # Redis ???Redisson ???????????????????
  data:
    redis:
      host: 127.0.0.1 # ??
      port: 6379 # ??
      database: 0 # ?????
#    password: dev # ???????????

--- #################### ???????? ####################

# Quartz ?????? QuartzProperties ???
spring:
  quartz:
    auto-startup: true # ????????????? Job
    scheduler-name: schedulerName # Scheduler ?????? schedulerName
    job-store-type: jdbc # Job ????????? memory ??????? jdbc ??????
    wait-for-jobs-to-complete-on-shutdown: true # ?????????????????????? false ?????? true
    properties: # ?? Quartz Scheduler ?????????? http://www.quartz-scheduler.org/documentation/2.4.0-SNAPSHOT/configuration.html ??
      org:
        quartz:
          # Scheduler ????
          scheduler:
            instanceName: schedulerName
            instanceId: AUTO # ???? instance ID
          # JobStore ????
          jobStore:
            # JobStore ?????????https://blog.csdn.net/weixin_42458219/article/details/122247162
            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore
            isClustered: true # ?????
            clusterCheckinInterval: 15000 # ???????????????? 15000?? 15 ?
            misfireThreshold: 60000 # misfire ?????????
          # ???????
          threadPool:
            threadCount: 25 # ????????? 10 ?
            threadPriority: 5 # ?????
            class: org.quartz.simpl.SimpleThreadPool # ?????
    jdbc: # ?? JDBC ? JobStore ????JDBC ???
      initialize-schema: NEVER # ?????? SQL ??? Quartz ????????? never ???????????

--- #################### ?????? ####################

# rocketmq ?????? RocketMQProperties ???
rocketmq:
  name-server: 127.0.0.1:9876 # RocketMQ Namesrv

spring:
  # RabbitMQ ?????? RabbitProperties ???
  rabbitmq:
    host: 127.0.0.1 # RabbitMQ ?????
    port: 5672 # RabbitMQ ?????
    username: rabbit # RabbitMQ ?????
    password: rabbit # RabbitMQ ?????
  # Kafka ?????? KafkaProperties ???
  kafka:
    bootstrap-servers: 127.0.0.1:9092 # ?? Kafka Broker ???????????????

--- #################### ???????? ####################

# Lock4j ???
lock4j:
  acquire-timeout: 3000 # ?????????????? 3000 ??
  expire: 30000 # ????????????? 30 ??

--- #################### ?????? ####################

# Actuator ????????
management:
  endpoints:
    web:
      base-path: /actuator # Actuator ??? API ?????????? /actuator
      exposure:
        include: '*' # ?????????????? health ? info ????????? * ??????????

# Spring Boot Admin ???
spring:
  boot:
    admin:
      # Spring Boot Admin Client ????????
      client:
        url: http://127.0.0.1:${server.port}/${spring.boot.admin.context-path} # ?? Spring Boot Admin Server ??
        instance:
          service-host-type: IP # ?????????? IP [IP, HOST_NAME, CANONICAL_HOST_NAME]
      # Spring Boot Admin Server ????????
      context-path: /admin # ?? Spring

# ??????
logging:
  file:
    name: ${user.home}/logs/${spring.application.name}.log # ?????????
  level:
    # ?????? MyBatis Mapper ????
    cn.iocoder.yudao.module.bpm.dal.mysql: debug
    cn.iocoder.yudao.module.infra.dal.mysql: debug
    cn.iocoder.yudao.module.infra.dal.mysql.logger.ApiErrorLogMapper: INFO # ?? ApiErrorLogMapper ?????? info???? GlobalExceptionHandler ????
    cn.iocoder.yudao.module.infra.dal.mysql.job.JobLogMapper: INFO # ?? JobLogMapper ?????? info
    cn.iocoder.yudao.module.infra.dal.mysql.file.FileConfigMapper: INFO # ?? FileConfigMapper ?????? info
    cn.iocoder.yudao.module.pay.dal.mysql: debug
    cn.iocoder.yudao.module.pay.dal.mysql.notify.PayNotifyTaskMapper: INFO # ?? PayNotifyTaskMapper ?????? info
    cn.iocoder.yudao.module.system.dal.mysql: debug
    cn.iocoder.yudao.module.system.dal.mysql.sms.SmsChannelMapper: INFO # ?? SmsChannelMapper ?????? info
    cn.iocoder.yudao.module.tool.dal.mysql: debug
    cn.iocoder.yudao.module.member.dal.mysql: debug
    cn.iocoder.yudao.module.trade.dal.mysql: debug
    cn.iocoder.yudao.module.promotion.dal.mysql: debug
    cn.iocoder.yudao.module.statistics.dal.mysql: debug
    cn.iocoder.yudao.module.crm.dal.mysql: debug
    cn.iocoder.yudao.module.erp.dal.mysql: debug
    org.springframework.context.support.PostProcessorRegistrationDelegate: ERROR # TODO ???????Spring Boot 3.X ??????? WARN ??

debug: false

--- #################### ????????????? ####################
wx:
  mp: # ???????????? https://github.com/Wechat-Group/WxJava/blob/develop/spring-boot-starters/wx-java-mp-spring-boot-starter/README.md ??
    #    app-id: wx041349c6f39b268b # ???????????
    #    secret: 5abee519483bc9f8cb37ce280e814bd0
    app-id: wx5b23ba7a5589ecbb # ????????
    secret: 2a7b3b20c537e52e74afd395eb85f61f
    #    app-id: wxa69ab825b163be19 # ????Kongdy ????
    #    secret: bd4f9fab889591b62aeac0d7b8d8b4a0
    # ??????? AccessToken ???????
    config-storage:
      type: RedisTemplate # ?? RedisTemplate ?? Redis????? Spring ???
      key-prefix: wx # Redis Key ???
      http-client-type: HttpClient # ?? HttpClient ?????????
  miniapp: # ???????????? https://github.com/Wechat-Group/WxJava/blob/develop/spring-boot-starters/wx-java-miniapp-spring-boot-starter/README.md ??
    #    appid: wx62056c0d5e8db250 # ???????????
    #    secret: 333ae72f41552af1e998fe1f54e1584a
    appid: wx63c280fe3248a3e7 # wenhualian??????
    secret: 6f270509224a7ae1296bbf1c8cb97aed
    #    appid: wxc4598c446f8a9cb3 # ????Kongdy ????
    #    secret: 4a1a04e07f6a4a0751b39c3064a92c8b
    config-storage:
      type: RedisTemplate # ?? RedisTemplate ?? Redis????? Spring ???
      key-prefix: wa # Redis Key ???
      http-client-type: HttpClient # ?? HttpClient ?????????

--- #################### ?????? ####################

# ????????????????????
yudao:
  captcha:
    enable: false # ??????????????????????????
  security:
    mock-enable: true
  xss:
    enable: false
    exclude-urls: # ???? url?????????????????
      - ${spring.boot.admin.context-path}/** # ??? Spring Boot Admin ???
      - ${management.endpoints.web.base-path}/** # ??? Actuator ???
  pay:
    order-notify-url: http://yunai.natapp1.cc/admin-api/pay/notify/order # ?????????????
    refund-notify-url: http://yunai.natapp1.cc/admin-api/pay/notify/refund # ?????????????
  access-log: # ????????
    enable: false
  demo: false # ??????
  tencent-lbs-key: TVDBZ-TDILD-4ON4B-PFDZA-RNLKH-VVF6E # QQ ????? https://lbs.qq.com/service/staticV2/staticGuide/staticDoc

justauth:
  enabled: true
  type:
    DINGTALK: # ??
      client-id: dingvrnreaje3yqvzhxg
      client-secret: i8E6iZyDvZj51JIb0tYsYfVQYOks9Cq1lgryEjFRqC79P3iJcrxEwT6Qk2QvLrLI
      ignore-check-redirect-uri: true
    WECHAT_ENTERPRISE: # ????
      client-id: wwd411c69a39ad2e54
      client-secret: 1wTb7hYxnpT2TUbIeHGXGo7T0odav1ic10mLdyyATOw
      agent-id: 1000004
      ignore-check-redirect-uri: true
    # noinspection SpringBootApplicationYaml
    WECHAT_MINI_APP: # ?????
      client-id: ${wx.miniapp.appid}
      client-secret: ${wx.miniapp.secret}
      ignore-check-redirect-uri: true
      ignore-check-state: true # ??????????? state????????
    WECHAT_MP: # ?????
      client-id: ${wx.mp.app-id}
      client-secret: ${wx.mp.secret}
      ignore-check-redirect-uri: true
  cache:
    type: REDIS
    prefix: 'social_auth_state:' # ????????? Redis ??????? JUSTAUTH::STATE::
    timeout: 24h # ????????? Redis ??????? 3 ??

